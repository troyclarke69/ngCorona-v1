{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/book.service.ts","webpack:///src/app/books/books.component.ts","webpack:///src/app/books/books.component.html","webpack:///src/app/corona-charts-api.service.ts","webpack:///src/app/corona-charts/chart.colors.ts","webpack:///src/app/corona-charts/corona-charts.component.ts","webpack:///src/app/corona-charts/corona-charts.component.html","webpack:///src/app/corona-day-api.service.ts","webpack:///src/app/corona-day/corona-day.component.ts","webpack:///src/app/corona-day/corona-day.component.html","webpack:///src/app/corona-global-api.service.ts","webpack:///src/app/corona-global/corona-global.component.ts","webpack:///src/app/corona-global/corona-global.component.html","webpack:///src/app/corona-news-api.service.ts","webpack:///src/app/corona-news/corona-news.component.ts","webpack:///src/app/corona-news/corona-news.component.html","webpack:///src/app/corona-totals-api.service.ts","webpack:///src/app/corona-totals/corona-totals.component.ts","webpack:///src/app/corona-totals/corona-totals.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/google-chart/area-chart/area-chart.component.ts","webpack:///src/app/google-chart/area-chart/area-chart.component.html","webpack:///src/app/google-chart/google-chart.module.ts","webpack:///src/app/google-chart/line-chart/line-chart.component.ts","webpack:///src/app/google-chart/line-chart/line-chart.component.html","webpack:///src/app/google-chart/map/map.component.ts","webpack:///src/app/google-chart/map/map.component.html","webpack:///src/app/google-chart/service/google-chart.service.ts","webpack:///src/app/google-chart/service/google-map.service.ts","webpack:///src/app/google-chart/service/service.module.ts","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero-search/hero-search.component.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","BookService","httpClient","SERVER_URL","get","providedIn","BooksComponent","bookService","books","fetchData","subscribe","data","ApiService","console","log","LINE_CHART_COLORS","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","CoronaChartsComponent","apiService","lineChartOptions","responsive","lineChartType","lineChartColors","CoronaDayService","CoronaDayComponent","route","stats","days","paramMap","params","country","i","length","CoronaGlobalComponent","CoronaNewsComponent","CoronaTotalsComponent","DashboardComponent","heroService","heroes","getHeroes","slice","AreaChartComponent","gChartService","location","chartRows","chartRow","gLib","getGoogle","charts","load","setOnLoadCallback","drawMain","bind","visualization","arrayToDataTable","options","hAxis","vAxis","bubble","textStyle","fontSize","chart","BubbleChart","document","getElementById","draw","push","counter","limit","s","casesPerOneMillion","deathsPerOneMillion","testsPerOneMillion","back","goBack","GoogleChartModule","providers","LineChartComponent","res","legend","position","chartArea","width","height","curveType","LineChart","scaleType","viewWindowMode","viewWindow","min","gridlines","count","date","confirmed","recovered","deaths","MapComponent","showToolTip","showInfoWindow","Map","cases","GoogleChartService","google","GoogleMapService","ServiceModule","HeroDetailComponent","getHero","snapshot","hero","updateHero","HeroSearchComponent","searchTerms","term","next","heroes$","pipe","searchHeroes","search","HeroService","http","messageService","heroesUrl","httpOptions","headers","_","handleError","url","h","outcome","trim","x","post","newHero","put","operation","result","error","message","add","HeroesComponent","name","addHero","filter","deleteHero","MessageService","messages","MessagesComponent","NavbarComponent","SidebarComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { HeroesComponent }      from './heroes/heroes.component';\nimport { HeroDetailComponent }  from './hero-detail/hero-detail.component';\nimport { CoronaTotalsComponent } from './corona-totals/corona-totals.component';\nimport { CoronaDayComponent } from './corona-day/corona-day.component';\nimport { BooksComponent } from './books/books.component';\n// import { CoronaChartsComponent } from './corona-charts/corona-charts.component';\nimport { CoronaNewsComponent } from './corona-news/corona-news.component';\nimport { LineChartComponent } from './google-chart/line-chart/line-chart.component'\nimport { AreaChartComponent } from './google-chart/area-chart/area-chart.component'\nimport { MapComponent } from './google-chart/map/map.component'\nimport { CoronaGlobalComponent } from './corona-global/corona-global.component'\n\nconst routes: Routes = [\n\n  // these are direct feeds:\n  { path: '', redirectTo: '/corona-news', pathMatch: 'full' },\n  { path: 'corona-news', component: CoronaNewsComponent },\n  { path: 'corona-global', component: CoronaGlobalComponent },\n  { path: 'corona-totals', component: CoronaTotalsComponent },\n\n  { path: 'google-chart/line-chart/:country', component: LineChartComponent },\n  { path: 'google-chart/map', component: MapComponent },\n  { path: 'google-chart/area-chart', component: AreaChartComponent },\n  \n  // ADD: corona-charts (maps, etc...)\n\n  // deprecated: link now from <app-corona-totals>\n  // { path: 'corona-day/:country', component: CoronaDayComponent },\n\n  // below from (my) api:\n  // { path: 'corona-day', component: CoronaDayComponent },\n  // { path: 'books', component: BooksComponent },\n  \n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Troy Clarke';\n}\n","<app-navbar id=\"navbar\" \r\n    class=\"navbar navbar-dark bg-dark\">\r\n</app-navbar> \r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\" id=\"mainContent\">\r\n\r\n    <app-sidebar id=\"sideBar\" \r\n        class=\"col-sm-3 col-md-2 d-none d-sm-block sidebar\">\r\n    </app-sidebar>\r\n\r\n    <div class=\"col-sm-9 ml-sm-auto col-md-10 pt-3\" id=\"dashboard\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n    <!-- <div class=\"\" id=\"\">\r\n      <app-line-chart></app-line-chart>\r\n    </div> -->\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- <h1>{{title}}</h1> -->\r\n\r\n<!-- <div class=\"container-fluid\">\r\n\r\n  <div class=\"row\" id=\"\">\r\n    <nav class=\"col-sm-12 bg-dark navbar\">\r\n        <app-navbar></app-navbar>\r\n    </nav>\r\n  </div>\r\n\r\n  <div class=\"row\" id=\"mainContent\">\r\n\r\n    <nav class=\"col-sm-3 col-md-1 d-none d-sm-block\"> -->\r\n      <!-- <a routerLink=\"/dashboard\">Dashboard</a>\r\n      <a routerLink=\"/heroes\">Heroes</a> -->\r\n      <!-- <a routerLink=\"/corona-totals\">Covid</a>\r\n      <a routerLink=\"/books\">Books</a> -->\r\n      <!-- <app-sidebar></app-sidebar>\r\n    </nav>\r\n\r\n    <div class=\"col-sm-9 ml-sm-auto col-md-10 pt-3\" id=\"dashboard\">\r\n      <router-outlet></router-outlet>\r\n      <app-messages></app-messages>\r\n    </div>\r\n\r\n  </div>\r\n</div> -->","import { NgModule }       from '@angular/core';\nimport { CommonModule } from '@angular/common'\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n// import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n// import { InMemoryDataService }  from './in-memory-data.service';\nimport { AppRoutingModule }     from './app-routing.module';\n// import { MatToolbarModule, MatIconModule, MatSidenavModule, MatListModule, MatButtonModule } from  '@angular/material';\nimport { AppComponent }         from './app.component';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { HeroDetailComponent }  from './hero-detail/hero-detail.component';\nimport { HeroesComponent }      from './heroes/heroes.component';\nimport { HeroSearchComponent }  from './hero-search/hero-search.component';\nimport { MessagesComponent }    from './messages/messages.component';\nimport { CoronaTotalsComponent } from './corona-totals/corona-totals.component';\nimport { BooksComponent } from './books/books.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoronaDayComponent } from './corona-day/corona-day.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { CoronaNewsComponent } from './corona-news/corona-news.component';\nimport { CoronaChartsComponent } from './corona-charts/corona-charts.component';\n// import { LineChartComponent } from './google-chart/line-chart/line-chart.component'\nimport { GoogleChartModule } from './google-chart/google-chart.module';\nimport { CoronaGlobalComponent } from './corona-global/corona-global.component'\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ChartsModule,\n    CommonModule,\n    GoogleChartModule\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    //)\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    HeroSearchComponent,\n    CoronaTotalsComponent,\n    BooksComponent,\n    NavbarComponent,\n    SidebarComponent,\n    CoronaDayComponent,\n    // CoronaChartsComponent,\n    CoronaNewsComponent,\n    CoronaChartsComponent,\n    CoronaGlobalComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\n\nexport class AppModule { }","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \nexport class BookService {\n\n\tprivate SERVER_URL = \"http://127.0.0.1:5000\";\n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}/api/v1/resources/books/all`);  \n\t}  \n}","import { Component, OnInit } from '@angular/core';  \nimport { BookService } from '../book.service';\n\n@Component({  \n\tselector: 'app-books',  \n\ttemplateUrl: './books.component.html',  \n\tstyleUrls: ['./books.component.css']  \n})  \nexport class BooksComponent implements OnInit {\n  \n  books = [];\n  \n  constructor(private bookService: BookService) { }\n  \n  ngOnInit() {\n\t\tthis.bookService.fetchData().subscribe((data: any[])=>{  \n\t\t\t// console.log(data);  \n\t\t\tthis.books = data;  \n\t\t})  \n\t}\n}","<div class=\"section-container\">\n    <h2>\n      Book List\n    </h2>\n    <table class=\"table table-inverse table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th>Id</th>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Published</th>\n          <th>First Sentence</th>\n          <!-- <th>Status</th> -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let book of books\">\n            <!-- http://localhost:57283/api/orderdetail/getorderdetails/5 -->\n          <td>{{ book.id }}</td>\n          <td>{{ book.title }}</td>\n          <td>{{ book.author }}</td>\n          <td>{{ book.published }}</td>\n          <td>{{ book.first_sentence }}</td>\n          <!-- <td>Status</td> -->\n        </tr>\n      </tbody>\n    </table>\n  \n    <!-- <app-pagination\n    (goPage)=\"goToPage($event)\"\n    (goPrev)=\"goToPrevious()\"\n    (goNext)=\"goToNext()\"\n    [page]=\"page\"\n    [perPage]=\"limit\"\n    [count]=\"total\">\n    </app-pagination> -->\n\n  </div>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \nexport class ApiService {\n\n\tprivate SERVER_URL = \"http://127.0.0.1:5000/api/daily/country\";\n  \n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\n\t\tconsole.log(\"coronaChartsService:fetchData\");  \n    \treturn this.httpClient.get(`${this.SERVER_URL}`); \n     \n\t}  \n}","export const LINE_CHART_COLORS = [\r\n    {\r\n      backgroundColor: 'rgba(6, 214, 160, 0.2)',\r\n      borderColor: 'rgba(0, 200, 140, 0.5)',\r\n      pointBackgroundColor: '#000',\r\n      pointBorderColor: '#000',\r\n      pointHoverBackgroundColor: '#555',\r\n      pointHoverBorderColor: '#555'\r\n    },\r\n    {\r\n      backgroundColor: 'rgba(255, 209, 102, 0.2)',\r\n      borderColor: 'rgba(240, 180, 89, 0.5)',\r\n      pointBackgroundColor: '#000',\r\n      pointBorderColor: '#000',\r\n      pointHoverBackgroundColor: '#555',\r\n      pointHoverBorderColor: '#555'\r\n    },\r\n    {\r\n      backgroundColor: 'rgba(15, 78, 133, 0.2)',\r\n      borderColor: 'rgba(3, 64, 128, 0.5)',\r\n      pointBackgroundColor: '#000',\r\n      pointBorderColor: '#000',\r\n      pointHoverBackgroundColor: '#555',\r\n      pointHoverBorderColor: '#555'\r\n    },\r\n  ];\r\n  ","import { Component, OnInit } from '@angular/core';  \nimport { ApiService } from '../corona-charts-api.service';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\nimport { LINE_CHART_COLORS } from './chart.colors';\n\n@Component({  \n\tselector: 'app-corona-charts',  \n\ttemplateUrl: './corona-charts.component.html',  \n\tstyleUrls: ['./corona-charts.component.css']  \n})  \n\nexport class CoronaChartsComponent implements OnInit {\n\n  constructor(private apiService: ApiService) { }\n\n  _data: any[];\n\n  lineChartData: any;\n  lineChartLabels: any;\n  lineChartOptions: any = {\n    responsive: true\n  };\n\n  lineChartLegend: true;\n  lineChartType = 'line';\n  lineChartColors = LINE_CHART_COLORS;\n\n  ngOnInit() { }\n}","<p>charts here</p>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \nexport class CoronaDayService {\n\n\t// Get data from here:\n\n\t// note: this corona API returns some whacked json - was unable to parse \n\t// through 'normal' methods -- downloaded through .net app, and used sql scripts\n\t// to massage data into sqlite database called thru python here:\n\t// private SERVER_URL = \"http://127.0.0.1:5000/api/daily\";\n\t// private SERVER_URL = \"https://corona.lmao.ninja/v2/historical\";\n\n\t// Post data to SQLITE from custom (Python) API\n\t// private LOAD_URL = \"http://127.0.0.1:5000/corona/addRow?\";\n\n\t// // Get Transformed/AI-gen data from custom (Python) API, displayed in UI\n\t// private GET_URL = \"http://127.0.0.1:5000/corona/consolidated\"\n\n\t// private TEST_URL = \"http://127.0.0.1:5000/corona/addRow?intId=1&country=Canada&province=Ontario&cases=100&deaths=30&recovered=44\"\n\n// \tfetch(\"https://pomber.github.io/covid19/timeseries.json\")\n//   .then(response => response.json())\n//   .then(data => {\n//     data[\"Argentina\"].forEach(({ date, confirmed, recovered, deaths }) =>\n//       console.log(`${date} active cases: ${confirmed - recovered - deaths}`)\n//     );\n//   });\n\n\tprivate SERVER_URL = \"https://pomber.github.io/covid19/timeseries.json\"\n\n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\t\t\n\t\tconsole.log(\"coronaDayService:fetchData\");  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n\t}  \n\n\t// POST data to SQLITE\n\t// public postData(body, headers){\n\t// public postData(params: string){\t\t\n\t// \tconst headers = new Headers(\n\t// \t{\t'Content-Type': 'application/json' \t});\n\t// \t// console.log(\"coronaDayService:postData\");  \n\t// \t// console.log(\"body\", body);\n\t// \t// console.log(\"headers\", headers);\n\t// \tlet url = `${this.LOAD_URL}` + params;\n\t// \tthis.httpClient.post(`${this.TEST_URL}`, headers);\n\t// \t// this.httpClient.post(url, headers);\n\t// \t// this.httpClient.request('POST', `${this.TEST_URL}`);\n\t// \t// error: error => console.error('There was an error!', error)\n\t// \tconsole.log(url);\n\t// \treturn \"success\";\n\t// } \n\t// GET data from SQLITE service (Python-flask)\n\t// public getData(){\t\t\n\t// \tconsole.log(\"coronaDayService:getData\");  \n\t// \treturn this.httpClient.get(`${this.GET_URL}`);  \n\t// }  \n}","import { Component, OnInit, Input } from '@angular/core';  \nimport { CoronaDayService } from '../corona-day-api.service';\nimport { ActivatedRoute } from '@angular/router';\n\n// Implement the interface:\nimport { ChartData } from '../chart-data';\nimport { keyframes } from '@angular/animations';\n\n@Component({  \n\tselector: 'app-corona-day',  \n\ttemplateUrl: './corona-day.component.html',  \n\tstyleUrls: ['./corona-day.component.css']  \n})  \nexport class CoronaDayComponent implements OnInit {\n\t// @Input() x: string;\n\n\tstats = [];\n\tdays = [];\n\tprivate country: string;\n\t//chartData: ChartData;\n\t\n\tconstructor(\n\t\tprivate apiService: CoronaDayService,\n\t\tprivate route: ActivatedRoute\n\n\t\t) { }\n\t\n\tngOnInit() \n\t{\n\t\tthis.route.paramMap.subscribe(params => {\n\t\t\tthis.country = params.get(\"country\")\n\t\t})\t\n\n\t\tconsole.log('Param ', this.country);\n\n\t\tthis.apiService.fetchData().subscribe((data: any[])=>{ \t\t\t\n\t\t\t//This seems a bit of a hack, but couldn't figure out another workable method...\n\t\t\tlet keys = Object.keys(data);\n\t\t\t//loop through all (c) country names, and when we get a match, set the stats obj to the data[c]\n\t\t\tfor (var i=0; i < keys.length; i++) {\n\t\t\t\tif(this.country == keys[i]){\n\t\t\t\t\tthis.stats = data[keys[i]] };\n\t\t\t}\n\n\n\n\t\t\t// START > THESE STATEMENTS PLUCKS OUT DATA BY INDEX NUMBERS\n\t\t\t// KEEP IN MIND: Returns only rows (i.e 84 DAYS as of April 15) PER THE COUNTRY PARAM SPECIFIED\n\t\t\t// BUT STILL DO NOT KNOW HOW TO EXTRACT COUNTRY VALUE\n\t\t\t// let dataKeys = Object.keys(this.stats);\n\t\t\t// let dataVals = Object.values(this.stats);\n\t\t\t// let x = dataVals[4];\n\t\t\t// let confirmed = x.confirmed;\n\t\t\t// console.log('keys ', dataKeys); // DOES NOT RETURN COUNTRY NAME\n\t\t\t// console.log('values ', dataVals);\n\t\t\t// console.log('confirmed: ', confirmed);\n\t\t\t// END\n\n\n\t\t\t//** Code below was in attempt to process corona.lmao.ninja API\n\t\t\t// Currently unable to make that shit work\n\t\t\t// so processed through Googster (.NET) app and sql scripts\n\n\t\t\t// ************************************************************************\n\t\t\t// let i = Object.keys(this.stats); //get number of records ... index\n\t\t\t// let dataVals = Object.values(this.stats);\n\n\t\t\t// //for loop and post to SQL:\n\t\t\t// //{index, <country>, <province>, cases(str), deaths(str), recovered(str)}\n\t\t\t// //In SQL: parse string fields - date : val\n\n\t\t\t// let x = dataVals[0];\n\t\t\t// let country = x.country;\n\t\t\t// let province = x.province;\n\t\t\t// let objCases = [];\n\t\t\t// objCases = x.timeline.cases;\t\t\n\t\t\t// let objDeaths = [];\n\t\t\t// objDeaths = x.timeline.deaths;\n\t\t\t// let objRecovered = [];\n\t\t\t// objRecovered = x.timeline.recovered;\n\t\t\t// let intId = 0;\n\n\t\t\t// console.log('index', i);\n\t\t\t// console.log('country', country);\n\t\t\t// console.log('province', province);\n\t\t\t// console.log('objCases', objCases);\n\t\t\t// console.log('objDeaths', objDeaths);\n\t\t\t// console.log('objRecovered', objRecovered);\n\t\t\t// console.log('objCaseDate', objCaseDate);\n\n\t\t\t// this.sendData(0, country, province, objCases,\n\t\t\t// \tobjDeaths, objRecovered);\n\t\n\t\t})  \n\t}\n\n\t// sendData(intId: number, country: string, province: string, \n\t// \t\t\t\t\t\tcases: object, deaths: object, recovered: object) \n\t// {\n\t// \tlet params = 'intId=' + intId + '&country=' + country + '&province=' \n\t// \t\t\t+ province + '&cases=' + '{11/20/20:5}' + '&deaths=' \n\t// \t\t\t+ '{11/20/20:5}' + '&recovered=' + '{11/20/20:5}';\n\n\t// \tthis.apiService.postData(params);\n\n\t// \t// const body = {\n\t// \t// \tintId, country, province, cases, deaths, recovered\n\t// \t// }\n\t// \t// const headers = new Headers(\n\t// \t// \t{\n\t// \t// \t\t'Content-Type': 'application/json'\n\t// \t// \t});\n\n\t// \t// return this.apiService.postData(body, {headers: headers});\n\t// }\n\n}","<div class=\"section-container\">\n    <h4>\n      COVID19 Cases, Deaths, Recovered - daily\n    </h4>\n\n    <table class=\"table table-inverse table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <!-- <th>Country</th> -->\n          <th>Date</th>\n          <th>Cases</th>\n          <th>Deaths</th>\n          <th>Recovered</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let s of stats\">\n\n          <!-- <td>{{ s }}</td> -->\n          <td>{{ s.date }}</td>\n          <td>{{ s.confirmed }}</td>\n          <td>{{ s.deaths }}</td>\n          <td>{{ s.recovered }}</td>\n        </tr>\n                 \n      </tbody>\n    </table>\n  \n    <!-- <app-pagination\n    (goPage)=\"goToPage($event)\"\n    (goPrev)=\"goToPrevious()\"\n    (goNext)=\"goToNext()\"\n    [page]=\"page\"\n    [perPage]=\"limit\"\n    [count]=\"total\">\n    </app-pagination> -->\n\n  </div>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \n\nexport class ApiService {\n\n\t//default ?sort=cases\n\tprivate SERVER_URL = \"https://corona.lmao.ninja/v2/all\";\n\n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\n\t\tconsole.log(\"coronaGlobalService:fetchData\");  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n\t}  \n}","import { Component, OnInit } from '@angular/core';  \nimport { ApiService } from '../corona-global-api.service';\n\n@Component({  \n\tselector: 'app-corona-global',  \n\ttemplateUrl: './corona-global.component.html',  \n\tstyleUrls: ['./corona-global.component.css']  \n})  \nexport class CoronaGlobalComponent implements OnInit {\n\t\n\tstats = [];\n\tdeathRate;\n\t\n\tconstructor(private apiService: ApiService) { }\n\t\n\tngOnInit() {\n\t\tthis.apiService.fetchData().subscribe((data: any[])=>{  \n\t\t\tconsole.log(data);  \n\t\t\tthis.stats = data; \n\t\t\t\n\t\t\t// let deathRate = this.stats['deaths'] / this.stats['cases'];\n\t\t\t// let deathRate = 1;\n\t\t})  \n\t}\n}","<div class=\"section-container\">\n    <span>Global Statistics</span>\n    <h5>{{ stats['affectedCountries'] }} Countries/Other</h5>\n</div>\n\n<div><br></div>\n\n<div class=\"container-fluid\">\n    <div class=\"row\" id=\"mainContent\">\n\n        <!-- <h2>Cases</h2> -->\n        <div class=\"card col-sm-6 card bg-basic text-black\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1><b>Cases</b></h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em><b>{{ stats['cases'] | number }}</b></em>\n            </div>\n\n            <div class=\"card-footer\" style=\"text-align: center;\">\n                <em><b>Today: {{ stats['todayCases'] | number }}</b></em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1><b>Deaths</b></h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em><b>{{ stats['deaths'] | number }} </b></em>\n            </div>\n\n            <div class=\"card-footer\" style=\"text-align: center;\">\n                <em><b>Today: {{ stats['todayDeaths'] | number }}</b></em>\n            </div>\n        </div>\n\n    </div>\n\n    <br>\n\n    <div class=\"row\" id=\"mainContent\">\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Recovered</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['recovered'] | number }} </em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Active</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['active'] | number }} </em>\n            </div>\n        </div>\n\n    </div>\n\n        <!-- <div class=\"card col-sm-3 col-md-2 d-none d-sm-block\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Death Rate</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ deathRate }} </em>\n            </div>\n        </div> -->\n\n    <br>\n\n    <!-- <div class=\"row\" id=\"mainContent\">\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Today's Cases</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['todayCases'] | number }} </em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Today's Deaths</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['todayDeaths'] | number }} </em>\n            </div>\n        </div>\n            \n    </div> -->\n\n    <br>\n    <div class=\"row\" id=\"mainContent\">\n\n        <!-- <h2>Cases</h2> -->\n        <div class=\"card col-sm-3\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Cases/Million</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['casesPerOneMillion'] | number }} </em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-3\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Deaths/Million</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['deathsPerOneMillion'] | number }} </em>\n            </div>\n        </div>\n            \n        <div class=\"card col-sm-3\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Total Tests</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['tests'] | number }} </em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-3\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Tests/Million</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['testsPerOneMillion'] | number }} </em>\n            </div>\n        </div>\n\n    </div>\n\n</div>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \nexport class ApiService {\n\n\tprivate SERVER_URL = 'https://newsapi.org/v2/top-headlines?' +\n\t  'q=corona&country=ca&apiKey=de67b2237afe4fb1b77bfbe773987fca';\n\t  \n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\n\t\tconsole.log(\"coronaNewsService:fetchData\");  \n\t\t\n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n\t}  \n}","import { Component, OnInit } from '@angular/core';  \nimport { ApiService } from '../corona-news-api.service';\n\n@Component({  \n\tselector: 'app-corona-news',  \n\ttemplateUrl: './corona-news.component.html',  \n\tstyleUrls: ['./corona-news.component.css']  \n})  \nexport class CoronaNewsComponent implements OnInit {\n\t\n\tstats = [];\n\t\n\tconstructor(private apiService: ApiService) { }\n\t\n\tngOnInit() {\n\t\tthis.apiService.fetchData().subscribe((data: any[])=>{  \n\t\t\tthis.stats = data['articles']; \n\t\t\tconsole.log('Returned ', this.stats);  \n\t\t})  \n\t}\n}","<div class=\"section-container\">\n    <h2><em>\n      Top Headlines\n    </em></h2>\n\n    <table class=\"table table-inverse table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th></th>\n          <th></th>\n          <!-- <th></th> -->\n          <!-- <th></th>       -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let s of stats\">\n\n          <td width=\"100px\">\n              <img src=\"{{ s.urlToImage }}\" width=\"140px\" height=\"100px\"> \n          </td>\n          <td width=\"900px\">\n            <h2><b>\n              <a href=\"{{ s.url }}\" target='_blank'>{{ s.title }}</a>\n            </b></h2>\n            <p><em>{{ s.description }}</em></p>\n          </td>\n          <!-- <td><em>{{ s.description }}</em></td> -->\n          <!-- <td>{{ s.source.name }}</td> -->\n          <!-- <td><a href=\"{{ s.url }}\" target='_blank'>Read story</a></td> -->        \n        </tr>\n                 \n      </tbody>\n    </table>\n  \n    <!-- <app-pagination\n    (goPage)=\"goToPage($event)\"\n    (goPrev)=\"goToPrevious()\"\n    (goNext)=\"goToNext()\"\n    [page]=\"page\"\n    [perPage]=\"limit\"\n    [count]=\"total\">\n    </app-pagination> -->\n\n  </div>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \n\nexport class ApiService {\n\n\t//default ?sort=cases\n\tprivate SERVER_URL = \"https://corona.lmao.ninja/v2/countries?sort=cases\";\n\n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\n\t\tconsole.log(\"coronaTotalsService:fetchData\");  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n\t}  \n}","import { Component, OnInit } from '@angular/core';  \nimport { ApiService } from '../corona-totals-api.service';\n\n@Component({  \n\tselector: 'app-corona-totals',  \n\ttemplateUrl: './corona-totals.component.html',  \n\tstyleUrls: ['./corona-totals.component.css']  \n})  \nexport class CoronaTotalsComponent implements OnInit {\n\t\n\tstats = [];\n\t// cases: any;\n\t\n\tconstructor(private apiService: ApiService) { }\n\t\n\tngOnInit() {\n\t\tthis.apiService.fetchData().subscribe((data: any[])=>{  \n\t\t\t// console.log(data);  \n\t\t\tthis.stats = data;  \n\t\t}) \n\t\t\n\t}\n}","<div class=\"section-container\">\n    <h2>\n      Coronavirus - Stats by Country\n    </h2>\n\n    <table class=\"table table-inverse \n      table-hover header-fixed\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th>Country</th>\n          <th>Cases</th>\n          <th>Today's Cases</th>\n          <th>Deaths</th>\n          <th>Today's Deaths</th>\n          <th>Recovered</th>\n          <th>Active</th>\n          <th>Critical</th>\n          <th>Cases/M</th>\n          <th>Deaths/M</th>\n          <th>Total Tests</th>\n          <th>Tests/M</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let s of stats\">\n\n          <td><img src=\"{{ s.countryInfo.flag }}\" width=\"15%\" height=\"15%\"> &nbsp;             \n            <a routerLink=\"/google-chart/line-chart/{{ s.country }}\">\n              {{ s.country }}\n            </a>\n          </td>\n          <td>{{ s.cases }}</td>\n          <td>{{ s.todayCases }}</td>\n          <td>{{ s.deaths }}</td>\n          <td>{{ s.todayDeaths }}</td>\n          <td>{{ s.recovered }}</td>\n          <td>{{ s.active }}</td>\n          <td>{{ s.critical }}</td>\n          <td>{{ s.casesPerOneMillion }}</td>\n          <td>{{ s.deathsPerOneMillion }}</td>\n          <td>{{ s.tests }}</td>\n          <td>{{ s.testsPerOneMillion }}</td>\n         \n        </tr>\n                 \n      </tbody>\n    </table>\n  \n    <!-- <app-pagination\n    (goPage)=\"goToPage($event)\"\n    (goPrev)=\"goToPrevious()\"\n    (goNext)=\"goToNext()\"\n    [page]=\"page\"\n    [perPage]=\"limit\"\n    [count]=\"total\">\n    </app-pagination> -->\n\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n}","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n  <a *ngFor=\"let hero of heroes\" class=\"col-1-4\"\n      routerLink=\"/detail/{{hero.id}}\">\n    <div class=\"module hero\">\n      <h4>{{hero.name}}</h4>\n    </div>\n  </a>\n</div>\n\n<app-hero-search></app-hero-search>","import { Component, OnInit, Input } from '@angular/core';\nimport { GoogleMapService } from '../service/google-map.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChartData } from '../../chart-data'\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-area-chart',\n  templateUrl: './area-chart.component.html',\n  styleUrls: ['./area-chart.component.css']\n})\n\nexport class AreaChartComponent implements OnInit \n{\n  private gLib: any;\n  private stats = [];\n  private chartRows = [];\n  private chartRow = [];\n\n  // gChartService contains google charts lib ++ fetchData\n  constructor( \n                private gChartService : GoogleMapService,\n                private route: ActivatedRoute,\n                private location: Location )   \n  { \n\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", {\"packages\": [\"corechart\"]});\n    // this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n    this.gLib.charts.setOnLoadCallback(this.drawMain.bind(this));\n  }\n\n  private drawMain()\n  {\n    let data = new this.gLib.visualization.arrayToDataTable(this.chartRows);  \n    console.log('drawMain', data);\n    var options = {\n      title: '',\n      hAxis: {title: 'Cases/Million'}, \n      vAxis: {title: 'Deaths/Million'},\n      bubble: {textStyle: {fontSize: 10}}      \n    };\n\n    let chart = new this.gLib.visualization.BubbleChart(document.getElementById('divBubbleChart'));\n    chart.draw(data, options);\n  }\n\n  ngOnInit(): void \n  {\n\n    this.gChartService.fetchData().subscribe((data: any[])=>{ \n      this.stats = data;\n      // console.log(this.stats);\n      // push in the labels:\n      this.chartRow.push('Country', 'Cases', 'Deaths', 'Tests');\n      this.chartRows.push(this.chartRow);\n\n      let counter = 1;\n      let limit = 11;\n      // now push in the data:\n      for(let s of this.stats)\n      {\n        if(counter < limit){\n          let chartRow = [];\n          chartRow.push(s.country, s.casesPerOneMillion, s.deathsPerOneMillion, s.testsPerOneMillion);\n          this.chartRows.push(chartRow);\n          counter = counter + 1;\n        }\n      }    \n      console.log('chart', this.chartRows);\n      this.drawMain(); \n    })       \n  }\n  \n  goBack(): void {\n    this.location.back();\n  }\n\n}","<div align='left'>\n    <div>\n        <h4><em><b>Comparison: Top 10 Countries (total number of cases) - Cases, Deaths, Testing (per Million)</b></em></h4>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\" id=\"\">\n            <div id=\"divBubbleChart\" class=\"col-sm-10\"></div>\n        </div>\n    </div>\n\n    <p></p>\n    <p></p>\n\n    <div>\n        <button class=\"btn btn-link\" (click)=\"goBack()\">\n            Back To Charts\n        </button>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServiceModule } from './service/service.module';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { MapComponent } from './map/map.component';\nimport { AreaChartComponent } from './area-chart/area-chart.component';\n\n@NgModule({\n  declarations: [LineChartComponent, MapComponent, AreaChartComponent],\n  imports: [\n    CommonModule,\n    ServiceModule\n  ],\n  exports: [LineChartComponent],\n  providers : []\n})\nexport class GoogleChartModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { GoogleChartService } from '../service/google-chart.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChartData } from '../../chart-data'\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\n\nexport class LineChartComponent implements OnInit \n{\n  // @Input() chartData: ChartData;\n\n  private gLib: any;\n  private res = [];\n  public country: string;\n  private stats = [];\n  // private chart = [];\n  // private chartCols = [];\n  private chartRows = [];\n  private chartRow = [];\n  public chartData: ChartData;\n\n  // gChartService contains google charts lib ++ fetchData\n  constructor( \n                private gChartService : GoogleChartService,\n                private route: ActivatedRoute,\n                private location: Location )   \n  { \n\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages':['corechart','table']});\n    // this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n    this.gLib.charts.setOnLoadCallback(this.drawMain.bind(this));\n  }\n\n  private drawChart()\n  {\n    let data = this.gLib.visualization.arrayToDataTable(this.res);\n    console.log('drawChart', data);\n    var options = {\n      title:'Daily Cases | Deaths | Recovered',\n      legend:{position:'top-right'},\n      chartArea:{width:'100%', height:'100%'},\n      curveType: 'function',\n     };\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('divLineChart'));\n    chart.draw(data, options);\n  }\n\n  private drawMain()\n  {\n    let data = new this.gLib.visualization.arrayToDataTable(this.chartRows);  \n    console.log('drawMain', data);\n    var options = {\n      title:'Daily Cases | Deaths | Recovered',\n      //legend:{position:'bottom'},\n      chartArea:{width: '50%', height:'50%'},\n      curveType: 'function',\n      vAxis: {\n        scaleType: 'linear', //log or linear (default)\n        viewWindowMode: 'explicit',\n        viewWindow: {\n          //max: 8000,\n          min: 0,\n        },\n        gridlines: {\n          count: 5,  //set kind of step (max-min)/count\n        }\n      }\n     };\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('divLineChart'));\n    chart.draw(data, options);\n  }\n\n  ngOnInit(): void \n  {\n    //sample data: note that 1st line holds labels (column headers)\n    // this.res = \n    // [\n    //   ['Date', 'Cases', 'Deaths', 'Recovered'],\n    //   ['2020-1-01',  1000,      400,   200],\n    //   ['2020-1-02',  1170,      460,   400],\n    //   ['2020-1-03',  660,       1120, 102],\n    //   ['2020-1-04',  1030,      540,   222]\n    // ];\n    // console.log('res', this.res);\n\n    this.route.paramMap.subscribe(params => {\n    \tthis.country = params.get(\"country\")  })\n    // this.country = 'US';   \n    // console.log('Param ', this.country);\n\n    // TO DO: FIX HACK\n    // Country names do not always resolve: e.g \"USA\" from list = \"US\" in chart, \"UK\" = \"United Kingdom\"\n    if (this.country == 'USA'){\n      this.country = 'US';\n    }\n    if (this.country == 'UK'){\n      this.country = 'United Kingdom';\n    }\n\n    this.gChartService.fetchData().subscribe((data: any[])=>{ \t\t\t\n      //This seems a bit of a hack, but couldn't figure out another workable method...\n      //loop through all (c) country names, and when we get a match, set the stats obj to the data[c]\n      let keys = Object.keys(data);\n      for (var i=0; i < keys.length; i++) \n      {\n        if(this.country == keys[i])\n        {\n          this.stats = data[keys[i]];\n        };\n      }   \n      this.chartRow.push('Date', 'Confirmed', 'Recovered', 'Deaths');\n      this.chartRows.push(this.chartRow);\n      for(let s of this.stats)\n      {\n        let chartRow = [];\n        chartRow.push(s.date, s.confirmed, s.recovered, s.deaths);\n        this.chartRows.push(chartRow);\n      }    \n      console.log('chart', this.chartRows);\n      this.drawMain(); \n    })       \n  }\n  \n  goBack(): void {\n    this.location.back();\n  }\n\n}","<div align='left'>\n    <div>\n        <h1><em><b>{{ country }}</b></em></h1>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\" id=\"\">\n            <div id=\"divLineChart\" class=\"col-sm-10\"></div>\n        </div>\n    </div>\n\n    <p></p>\n    <p></p>\n\n    <div>\n        <button class=\"btn btn-link\" (click)=\"goBack()\">\n            Back To Countries\n        </button>\n    </div>\n</div>\n","// NOTE: Must obtain API key to use this:\n// https://developers.google.com/maps/documentation/javascript/get-api-key\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { GoogleMapService } from '../service/google-map.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChartData } from '../../chart-data'\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\n\nexport class MapComponent implements OnInit \n{\n  private gLib: any;\n  // private res = [];\n  // public country: string;\n  private stats = [];\n  // private chart = [];\n  // private chartCols = [];\n  private chartRows = [];\n  private chartRow = [];\n  // public chartData: ChartData;\n\n  // gChartService contains google charts lib ++ fetchData\n  constructor( \n                private gChartService : GoogleMapService,\n                private route: ActivatedRoute,\n                private location: Location )   \n  { \n\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", {\"packages\": [\"map\"]});\n    // this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n    this.gLib.charts.setOnLoadCallback(this.drawMain.bind(this));\n  }\n\n  // private drawChart()\n  // {\n  //   let data = this.gLib.visualization.arrayToDataTable(this.res);\n  //   console.log('drawChart', data);\n  //   var options = {\n  //     title:'Daily Cases | Deaths | Recovered',\n  //     legend:{position:'top-right'},\n  //     chartArea:{width:'100%', height:'100%'},\n  //     curveType: 'function',\n  //    };\n  //   let chart = new this.gLib.visualization.LineChart(document.getElementById('divLineChart'));\n  //   chart.draw(data, options);\n  // }\n\n  private drawMain()\n  {\n    let data = new this.gLib.visualization.arrayToDataTable(this.chartRows);  \n    console.log('drawMain', data);\n    var options = {\n      showToolTip: true,\n      showInfoWindow: true\n     };\n    let chart = new this.gLib.visualization.Map(document.getElementById('divMapChart'));\n    chart.draw(data, options);\n  }\n\n  ngOnInit(): void \n  {\n\n    // this.route.paramMap.subscribe(params => {\n    // \tthis.country = params.get(\"country\")  })\n    // this.country = 'US';   \n    // console.log('Param ', this.country);\n\n    // TO DO: FIX HACK\n    // Country names do not always resolve: e.g \"USA\" from list = \"US\" in chart, \"UK\" = \"United Kingdom\"\n    // if (this.country == 'USA'){\n    //   this.country = 'US';\n    // }\n    // if (this.country == 'UK'){\n    //   this.country = 'United Kingdom';\n    // }\n\n    this.gChartService.fetchData().subscribe((data: any[])=>{ \n      this.stats = data;\n\n      //This seems a bit of a hack, but couldn't figure out another workable method...\n      //loop through all (c) country names, and when we get a match, set the stats obj to the data[c]\n      // let keys = Object.keys(data);\n      // for (var i=0; i < keys.length; i++) \n      // {\n      //   if(this.country == keys[i])\n      //   {\n      //     this.stats = data[keys[i]];\n      //   };\n      // } \n      \n      // push in the labels:\n      this.chartRow.push('Country', 'Stats');\n      this.chartRows.push(this.chartRow);\n\n      // now push in the data:\n      for(let s of this.stats)\n      {\n        let chartRow = [];\n        chartRow.push(s.country, s.cases);\n        this.chartRows.push(chartRow);\n      }    \n      console.log('chart', this.chartRows);\n      this.drawMain(); \n    })       \n  }\n  \n  goBack(): void {\n    this.location.back();\n  }\n\n}","<div align='left'>\n    <div>\n        <h1><em><b>Top 10 Countries - Confirmed Cases</b></em></h1>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\" id=\"\">\n            <div id=\"divMapChart\" class=\"col-sm-10\"></div>\n        </div>\n    </div>\n\n    <p></p>\n    <p></p>\n\n    <div>\n        <button class=\"btn btn-link\" (click)=\"goBack()\">\n            Back To Maps\n        </button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ServiceModule } from './service.module';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var google: any;\n\n@Injectable({\n  providedIn: ServiceModule\n})\nexport class GoogleChartService {\n\n  private google : any;\n\n  //note: https://corona.lmao.ninja/countries?all is NOT the API link we want here,...\n  // this line chart will detail country/region cases, deaths, etc ... this will be from different api call\n\n  // private SERVER_URL = \"https://corona.lmao.ninja/countries?all\";\n\n  private SERVER_URL = \"https://pomber.github.io/covid19/timeseries.json\"\n\n  constructor(private httpClient: HttpClient) { \n    this.google = google;\n  }\n\n  getGoogle(){\n    return this.google;\n  }\n\n  public fetchData(){\n\t\t\n\t\tconsole.log(\"GoogleChartService:fetchData\");  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n  }  \n  \n}","import { Injectable } from '@angular/core';\r\nimport { ServiceModule } from './service.module';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable({\r\n  providedIn: ServiceModule\r\n})\r\n\r\nexport class GoogleMapService {\r\n\r\n  private google : any;\r\n\r\n  private SERVER_URL = \"https://corona.lmao.ninja/v2/countries?sort=cases\"\r\n\r\n  constructor(private httpClient: HttpClient) { \r\n    this.google = google;\r\n  }\r\n\r\n  getGoogle(){\r\n    return this.google;\r\n  }\r\n\r\n  public fetchData(){\r\n\t\t\r\n\t\tconsole.log(\"GoogleMapService:fetchData\");  \r\n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \r\n  }  \r\n  \r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ServiceModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Hero }         from '../hero';\nimport { HeroService }  from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: [ './hero-detail.component.css' ]\n})\nexport class HeroDetailComponent implements OnInit {\n  @Input() hero: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.heroService.getHero(id)\n      .subscribe(hero => this.hero = hero);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n save(): void {\n    this.heroService.updateHero(this.hero)\n      .subscribe(() => this.goBack());\n  }\n}","<div *ngIf=\"hero\">\n  <h2>{{hero.name | uppercase}} Details</h2>\n  <div><span>id: </span>{{hero.id}}</div>\n  <div>\n    <label>name:\n      <input [(ngModel)]=\"hero.name\" placeholder=\"name\"/>\n    </label>\n  </div>\n  <button (click)=\"goBack()\">go back</button>\n  <button (click)=\"save()\">save</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.css' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n}","<div id=\"search-component\">\n    <h4><label for=\"search-box\">Hero Search</label></h4>\n  \n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n  \n    <ul class=\"search-result\">\n      <li *ngFor=\"let hero of heroes$ | async\" >\n        <a routerLink=\"/detail/{{hero.id}}\">\n          {{hero.name}}\n        </a>\n      </li>\n    </ul>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Hero } from './hero';\nimport { MessageService } from './message.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class HeroService {\n\n  private heroesUrl = 'api/heroes';  // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** GET heroes from the server */\n  getHeroes (): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(\n        tap(_ => this.log('fetched heroes')),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getHeroNo404<Data>(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/?id=${id}`;\n    return this.http.get<Hero[]>(url)\n      .pipe(\n        map(heroes => heroes[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} hero id=${id}`);\n        }),\n        catchError(this.handleError<Hero>(`getHero id=${id}`))\n      );\n  }\n\n  /** GET hero by id. Will 404 if id not found */\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x => x.length ?\n         this.log(`found heroes matching \"${term}\"`) :\n         this.log(`no heroes matching \"${term}\"`)),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new hero to the server */\n  addHero (hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero (hero: Hero | number): Observable<Hero> {\n    const id = typeof hero === 'number' ? hero : hero.id;\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero (hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n  heroes: Hero[];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n    .subscribe(heroes => this.heroes = heroes);\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) { return; }\n    this.heroService.addHero({ name } as Hero)\n      .subscribe(hero => {\n        this.heroes.push(hero);\n      });\n  }\n\n  delete(hero: Hero): void {\n    this.heroes = this.heroes.filter(h => h !== hero);\n    this.heroService.deleteHero(hero).subscribe();\n  }\n\n}","<h2>My Heroes</h2>\n\n<div>\n  <label>Hero name:\n    <input #heroName />\n  </label>\n  <!-- (click) passes input value to add() and then clears the input -->\n  <button (click)=\"add(heroName.value); heroName.value=''\">\n    add\n  </button>\n</div>\n\n<ul class=\"heroes\">\n  <li *ngFor=\"let hero of heroes\">\n    <a routerLink=\"/detail/{{hero.id}}\">\n      <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n    </a>\n    <button class=\"delete\" title=\"delete hero\"\n      (click)=\"delete(hero)\">x</button>\n  </li>\n</ul>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}","<div *ngIf=\"messageService.messages.length\">\n\n    <h2>Messages</h2>\n    <button class=\"clear\"\n            (click)=\"messageService.clear()\">clear</button>\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a class=\"navbar-brand\" href=\"#\">\n    <span class=\"logo logo-left\">Coronavirus</span>\n    <span class=\"logo logo-right\">Update</span>\n    <span class=\"logo-text\">Live</span>\n</a>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sidebar\">\n    <h4></h4>\n    \n    <div class=\"sidebar-link\">\n      <a routerLink=\"/corona-news\">News</a>\n    </div>\n\n    <div><hr /></div>\n\n    <div class=\"sidebar-link\">\n      <a routerLink=\"/corona-global\">Global</a>\n    </div>\n\n    <div><hr /></div>\n\n    <div class=\"sidebar-link\">\n        <a routerLink=\"/corona-totals\">Countries</a>\n    </div>\n\n    <div><hr /></div>\n    \n    <div class=\"sidebar-link\">\n      <a routerLink=\"/google-chart/area-chart\">Charts</a>\n    </div>\n    \n    <!-- <div><hr /></div>\n\n    <div class=\"sidebar-link\">\n      <a routerLink=\"/google-chart/map\">Maps</a>\n    </div> -->\n\n    <!-- <div class=\"sidebar-link\">\n      <a routerLink=\"/google-chart/line-chart\">Charts</a>\n    </div> -->\n\n\n    <!-- Not implemented yet ... -->\n    <!-- <div><hr /></div>\n    <div class=\"sidebar-link\">\n      <a routerLink=\"/corona-day\">By Day</a>\n    </div>\n\n    <div class=\"sidebar-link\">\n        <a routerLink=\"/books\">Books</a>\n    </div> -->\n\n</div>\n\n<!-- <div class=\"sidenav\">\n    <a href=\"#about\">About</a>\n    <a href=\"#services\">Services</a>\n    <a href=\"#clients\">Clients</a>\n    <a href=\"#contact\">Contact</a>\n    <button class=\"dropdown-btn\">Dropdown \n      <i class=\"fa fa-caret-down\"></i>\n    </button>\n    <div class=\"dropdown-container\">\n      <a href=\"#\">Link 1</a>\n      <a href=\"#\">Link 2</a>\n      <a href=\"#\">Link 3</a>\n    </div>\n    <a href=\"#contact\">Search</a>\n  </div> -->\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}