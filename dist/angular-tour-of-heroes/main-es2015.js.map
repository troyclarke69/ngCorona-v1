{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/book.service.ts","./src/app/books/books.component.ts","./src/app/books/books.component.html","./src/app/corona-charts-api.service.ts","./src/app/corona-charts/chart.colors.ts","./src/app/corona-charts/corona-charts.component.ts","./src/app/corona-charts/corona-charts.component.html","./src/app/corona-day-api.service.ts","./src/app/corona-day/corona-day.component.ts","./src/app/corona-day/corona-day.component.html","./src/app/corona-global-api.service.ts","./src/app/corona-global/corona-global.component.ts","./src/app/corona-global/corona-global.component.html","./src/app/corona-news-api.service.ts","./src/app/corona-news/corona-news.component.ts","./src/app/corona-news/corona-news.component.html","./src/app/corona-totals-api.service.ts","./src/app/corona-totals/corona-totals.component.ts","./src/app/corona-totals/corona-totals.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/google-chart/area-chart/area-chart.component.ts","./src/app/google-chart/area-chart/area-chart.component.html","./src/app/google-chart/google-chart.module.ts","./src/app/google-chart/line-chart/line-chart.component.ts","./src/app/google-chart/line-chart/line-chart.component.html","./src/app/google-chart/map/map.component.ts","./src/app/google-chart/map/map.component.html","./src/app/google-chart/service/google-chart.service.ts","./src/app/google-chart/service/google-map.service.ts","./src/app/google-chart/service/service.module.ts","./src/app/hero-detail/hero-detail.component.ts","./src/app/hero-detail/hero-detail.component.html","./src/app/hero-search/hero-search.component.ts","./src/app/hero-search/hero-search.component.html","./src/app/hero.service.ts","./src/app/heroes/heroes.component.ts","./src/app/heroes/heroes.component.html","./src/app/message.service.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { HeroesComponent }      from './heroes/heroes.component';\nimport { HeroDetailComponent }  from './hero-detail/hero-detail.component';\nimport { CoronaTotalsComponent } from './corona-totals/corona-totals.component';\nimport { CoronaDayComponent } from './corona-day/corona-day.component';\nimport { BooksComponent } from './books/books.component';\n// import { CoronaChartsComponent } from './corona-charts/corona-charts.component';\nimport { CoronaNewsComponent } from './corona-news/corona-news.component';\nimport { LineChartComponent } from './google-chart/line-chart/line-chart.component'\nimport { AreaChartComponent } from './google-chart/area-chart/area-chart.component'\nimport { MapComponent } from './google-chart/map/map.component'\nimport { CoronaGlobalComponent } from './corona-global/corona-global.component'\n\nconst routes: Routes = [\n\n  // these are direct feeds:\n  { path: '', redirectTo: '/corona-news', pathMatch: 'full' },\n  { path: 'corona-news', component: CoronaNewsComponent },\n  { path: 'corona-global', component: CoronaGlobalComponent },\n  { path: 'corona-totals', component: CoronaTotalsComponent },\n\n  { path: 'google-chart/line-chart/:country', component: LineChartComponent },\n  { path: 'google-chart/map', component: MapComponent },\n  { path: 'google-chart/area-chart', component: AreaChartComponent },\n  \n  // ADD: corona-charts (maps, etc...)\n\n  // deprecated: link now from <app-corona-totals>\n  // { path: 'corona-day/:country', component: CoronaDayComponent },\n\n  // below from (my) api:\n  // { path: 'corona-day', component: CoronaDayComponent },\n  // { path: 'books', component: BooksComponent },\n  \n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Troy Clarke';\n}\n","<app-navbar id=\"navbar\" \r\n    class=\"navbar navbar-dark bg-dark\">\r\n</app-navbar> \r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\" id=\"mainContent\">\r\n\r\n    <app-sidebar id=\"sideBar\" \r\n        class=\"col-sm-3 col-md-2 d-none d-sm-block sidebar\">\r\n    </app-sidebar>\r\n\r\n    <div class=\"col-sm-9 ml-sm-auto col-md-10 pt-3\" id=\"dashboard\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n    <!-- <div class=\"\" id=\"\">\r\n      <app-line-chart></app-line-chart>\r\n    </div> -->\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- <h1>{{title}}</h1> -->\r\n\r\n<!-- <div class=\"container-fluid\">\r\n\r\n  <div class=\"row\" id=\"\">\r\n    <nav class=\"col-sm-12 bg-dark navbar\">\r\n        <app-navbar></app-navbar>\r\n    </nav>\r\n  </div>\r\n\r\n  <div class=\"row\" id=\"mainContent\">\r\n\r\n    <nav class=\"col-sm-3 col-md-1 d-none d-sm-block\"> -->\r\n      <!-- <a routerLink=\"/dashboard\">Dashboard</a>\r\n      <a routerLink=\"/heroes\">Heroes</a> -->\r\n      <!-- <a routerLink=\"/corona-totals\">Covid</a>\r\n      <a routerLink=\"/books\">Books</a> -->\r\n      <!-- <app-sidebar></app-sidebar>\r\n    </nav>\r\n\r\n    <div class=\"col-sm-9 ml-sm-auto col-md-10 pt-3\" id=\"dashboard\">\r\n      <router-outlet></router-outlet>\r\n      <app-messages></app-messages>\r\n    </div>\r\n\r\n  </div>\r\n</div> -->","import { NgModule }       from '@angular/core';\nimport { CommonModule } from '@angular/common'\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\nimport { HttpClientModule }    from '@angular/common/http';\n// import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n// import { InMemoryDataService }  from './in-memory-data.service';\nimport { AppRoutingModule }     from './app-routing.module';\n// import { MatToolbarModule, MatIconModule, MatSidenavModule, MatListModule, MatButtonModule } from  '@angular/material';\nimport { AppComponent }         from './app.component';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { HeroDetailComponent }  from './hero-detail/hero-detail.component';\nimport { HeroesComponent }      from './heroes/heroes.component';\nimport { HeroSearchComponent }  from './hero-search/hero-search.component';\nimport { MessagesComponent }    from './messages/messages.component';\nimport { CoronaTotalsComponent } from './corona-totals/corona-totals.component';\nimport { BooksComponent } from './books/books.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoronaDayComponent } from './corona-day/corona-day.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { CoronaNewsComponent } from './corona-news/corona-news.component';\nimport { CoronaChartsComponent } from './corona-charts/corona-charts.component';\n// import { LineChartComponent } from './google-chart/line-chart/line-chart.component'\nimport { GoogleChartModule } from './google-chart/google-chart.module';\nimport { CoronaGlobalComponent } from './corona-global/corona-global.component'\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ChartsModule,\n    CommonModule,\n    GoogleChartModule\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    //)\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    HeroSearchComponent,\n    CoronaTotalsComponent,\n    BooksComponent,\n    NavbarComponent,\n    SidebarComponent,\n    CoronaDayComponent,\n    // CoronaChartsComponent,\n    CoronaNewsComponent,\n    CoronaChartsComponent,\n    CoronaGlobalComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\n\nexport class AppModule { }","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \nexport class BookService {\n\n\tprivate SERVER_URL = \"http://127.0.0.1:5000\";\n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}/api/v1/resources/books/all`);  \n\t}  \n}","import { Component, OnInit } from '@angular/core';  \nimport { BookService } from '../book.service';\n\n@Component({  \n\tselector: 'app-books',  \n\ttemplateUrl: './books.component.html',  \n\tstyleUrls: ['./books.component.css']  \n})  \nexport class BooksComponent implements OnInit {\n  \n  books = [];\n  \n  constructor(private bookService: BookService) { }\n  \n  ngOnInit() {\n\t\tthis.bookService.fetchData().subscribe((data: any[])=>{  \n\t\t\t// console.log(data);  \n\t\t\tthis.books = data;  \n\t\t})  \n\t}\n}","<div class=\"section-container\">\n    <h2>\n      Book List\n    </h2>\n    <table class=\"table table-inverse table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th>Id</th>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Published</th>\n          <th>First Sentence</th>\n          <!-- <th>Status</th> -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let book of books\">\n            <!-- http://localhost:57283/api/orderdetail/getorderdetails/5 -->\n          <td>{{ book.id }}</td>\n          <td>{{ book.title }}</td>\n          <td>{{ book.author }}</td>\n          <td>{{ book.published }}</td>\n          <td>{{ book.first_sentence }}</td>\n          <!-- <td>Status</td> -->\n        </tr>\n      </tbody>\n    </table>\n  \n    <!-- <app-pagination\n    (goPage)=\"goToPage($event)\"\n    (goPrev)=\"goToPrevious()\"\n    (goNext)=\"goToNext()\"\n    [page]=\"page\"\n    [perPage]=\"limit\"\n    [count]=\"total\">\n    </app-pagination> -->\n\n  </div>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \nexport class ApiService {\n\n\tprivate SERVER_URL = \"http://127.0.0.1:5000/api/daily/country\";\n  \n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\n\t\tconsole.log(\"coronaChartsService:fetchData\");  \n    \treturn this.httpClient.get(`${this.SERVER_URL}`); \n     \n\t}  \n}","export const LINE_CHART_COLORS = [\r\n    {\r\n      backgroundColor: 'rgba(6, 214, 160, 0.2)',\r\n      borderColor: 'rgba(0, 200, 140, 0.5)',\r\n      pointBackgroundColor: '#000',\r\n      pointBorderColor: '#000',\r\n      pointHoverBackgroundColor: '#555',\r\n      pointHoverBorderColor: '#555'\r\n    },\r\n    {\r\n      backgroundColor: 'rgba(255, 209, 102, 0.2)',\r\n      borderColor: 'rgba(240, 180, 89, 0.5)',\r\n      pointBackgroundColor: '#000',\r\n      pointBorderColor: '#000',\r\n      pointHoverBackgroundColor: '#555',\r\n      pointHoverBorderColor: '#555'\r\n    },\r\n    {\r\n      backgroundColor: 'rgba(15, 78, 133, 0.2)',\r\n      borderColor: 'rgba(3, 64, 128, 0.5)',\r\n      pointBackgroundColor: '#000',\r\n      pointBorderColor: '#000',\r\n      pointHoverBackgroundColor: '#555',\r\n      pointHoverBorderColor: '#555'\r\n    },\r\n  ];\r\n  ","import { Component, OnInit } from '@angular/core';  \nimport { ApiService } from '../corona-charts-api.service';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\nimport { LINE_CHART_COLORS } from './chart.colors';\n\n@Component({  \n\tselector: 'app-corona-charts',  \n\ttemplateUrl: './corona-charts.component.html',  \n\tstyleUrls: ['./corona-charts.component.css']  \n})  \n\nexport class CoronaChartsComponent implements OnInit {\n\n  constructor(private apiService: ApiService) { }\n\n  _data: any[];\n\n  lineChartData: any;\n  lineChartLabels: any;\n  lineChartOptions: any = {\n    responsive: true\n  };\n\n  lineChartLegend: true;\n  lineChartType = 'line';\n  lineChartColors = LINE_CHART_COLORS;\n\n  ngOnInit() { }\n}","<p>charts here</p>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \nexport class CoronaDayService {\n\n\t// Get data from here:\n\n\t// note: this corona API returns some whacked json - was unable to parse \n\t// through 'normal' methods -- downloaded through .net app, and used sql scripts\n\t// to massage data into sqlite database called thru python here:\n\t// private SERVER_URL = \"http://127.0.0.1:5000/api/daily\";\n\t// private SERVER_URL = \"https://corona.lmao.ninja/v2/historical\";\n\n\t// Post data to SQLITE from custom (Python) API\n\t// private LOAD_URL = \"http://127.0.0.1:5000/corona/addRow?\";\n\n\t// // Get Transformed/AI-gen data from custom (Python) API, displayed in UI\n\t// private GET_URL = \"http://127.0.0.1:5000/corona/consolidated\"\n\n\t// private TEST_URL = \"http://127.0.0.1:5000/corona/addRow?intId=1&country=Canada&province=Ontario&cases=100&deaths=30&recovered=44\"\n\n// \tfetch(\"https://pomber.github.io/covid19/timeseries.json\")\n//   .then(response => response.json())\n//   .then(data => {\n//     data[\"Argentina\"].forEach(({ date, confirmed, recovered, deaths }) =>\n//       console.log(`${date} active cases: ${confirmed - recovered - deaths}`)\n//     );\n//   });\n\n\tprivate SERVER_URL = \"https://pomber.github.io/covid19/timeseries.json\"\n\n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\t\t\n\t\tconsole.log(\"coronaDayService:fetchData\");  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n\t}  \n\n\t// POST data to SQLITE\n\t// public postData(body, headers){\n\t// public postData(params: string){\t\t\n\t// \tconst headers = new Headers(\n\t// \t{\t'Content-Type': 'application/json' \t});\n\t// \t// console.log(\"coronaDayService:postData\");  \n\t// \t// console.log(\"body\", body);\n\t// \t// console.log(\"headers\", headers);\n\t// \tlet url = `${this.LOAD_URL}` + params;\n\t// \tthis.httpClient.post(`${this.TEST_URL}`, headers);\n\t// \t// this.httpClient.post(url, headers);\n\t// \t// this.httpClient.request('POST', `${this.TEST_URL}`);\n\t// \t// error: error => console.error('There was an error!', error)\n\t// \tconsole.log(url);\n\t// \treturn \"success\";\n\t// } \n\t// GET data from SQLITE service (Python-flask)\n\t// public getData(){\t\t\n\t// \tconsole.log(\"coronaDayService:getData\");  \n\t// \treturn this.httpClient.get(`${this.GET_URL}`);  \n\t// }  \n}","import { Component, OnInit, Input } from '@angular/core';  \nimport { CoronaDayService } from '../corona-day-api.service';\nimport { ActivatedRoute } from '@angular/router';\n\n// Implement the interface:\nimport { ChartData } from '../chart-data';\nimport { keyframes } from '@angular/animations';\n\n@Component({  \n\tselector: 'app-corona-day',  \n\ttemplateUrl: './corona-day.component.html',  \n\tstyleUrls: ['./corona-day.component.css']  \n})  \nexport class CoronaDayComponent implements OnInit {\n\t// @Input() x: string;\n\n\tstats = [];\n\tdays = [];\n\tprivate country: string;\n\t//chartData: ChartData;\n\t\n\tconstructor(\n\t\tprivate apiService: CoronaDayService,\n\t\tprivate route: ActivatedRoute\n\n\t\t) { }\n\t\n\tngOnInit() \n\t{\n\t\tthis.route.paramMap.subscribe(params => {\n\t\t\tthis.country = params.get(\"country\")\n\t\t})\t\n\n\t\tconsole.log('Param ', this.country);\n\n\t\tthis.apiService.fetchData().subscribe((data: any[])=>{ \t\t\t\n\t\t\t//This seems a bit of a hack, but couldn't figure out another workable method...\n\t\t\tlet keys = Object.keys(data);\n\t\t\t//loop through all (c) country names, and when we get a match, set the stats obj to the data[c]\n\t\t\tfor (var i=0; i < keys.length; i++) {\n\t\t\t\tif(this.country == keys[i]){\n\t\t\t\t\tthis.stats = data[keys[i]] };\n\t\t\t}\n\n\n\n\t\t\t// START > THESE STATEMENTS PLUCKS OUT DATA BY INDEX NUMBERS\n\t\t\t// KEEP IN MIND: Returns only rows (i.e 84 DAYS as of April 15) PER THE COUNTRY PARAM SPECIFIED\n\t\t\t// BUT STILL DO NOT KNOW HOW TO EXTRACT COUNTRY VALUE\n\t\t\t// let dataKeys = Object.keys(this.stats);\n\t\t\t// let dataVals = Object.values(this.stats);\n\t\t\t// let x = dataVals[4];\n\t\t\t// let confirmed = x.confirmed;\n\t\t\t// console.log('keys ', dataKeys); // DOES NOT RETURN COUNTRY NAME\n\t\t\t// console.log('values ', dataVals);\n\t\t\t// console.log('confirmed: ', confirmed);\n\t\t\t// END\n\n\n\t\t\t//** Code below was in attempt to process corona.lmao.ninja API\n\t\t\t// Currently unable to make that shit work\n\t\t\t// so processed through Googster (.NET) app and sql scripts\n\n\t\t\t// ************************************************************************\n\t\t\t// let i = Object.keys(this.stats); //get number of records ... index\n\t\t\t// let dataVals = Object.values(this.stats);\n\n\t\t\t// //for loop and post to SQL:\n\t\t\t// //{index, <country>, <province>, cases(str), deaths(str), recovered(str)}\n\t\t\t// //In SQL: parse string fields - date : val\n\n\t\t\t// let x = dataVals[0];\n\t\t\t// let country = x.country;\n\t\t\t// let province = x.province;\n\t\t\t// let objCases = [];\n\t\t\t// objCases = x.timeline.cases;\t\t\n\t\t\t// let objDeaths = [];\n\t\t\t// objDeaths = x.timeline.deaths;\n\t\t\t// let objRecovered = [];\n\t\t\t// objRecovered = x.timeline.recovered;\n\t\t\t// let intId = 0;\n\n\t\t\t// console.log('index', i);\n\t\t\t// console.log('country', country);\n\t\t\t// console.log('province', province);\n\t\t\t// console.log('objCases', objCases);\n\t\t\t// console.log('objDeaths', objDeaths);\n\t\t\t// console.log('objRecovered', objRecovered);\n\t\t\t// console.log('objCaseDate', objCaseDate);\n\n\t\t\t// this.sendData(0, country, province, objCases,\n\t\t\t// \tobjDeaths, objRecovered);\n\t\n\t\t})  \n\t}\n\n\t// sendData(intId: number, country: string, province: string, \n\t// \t\t\t\t\t\tcases: object, deaths: object, recovered: object) \n\t// {\n\t// \tlet params = 'intId=' + intId + '&country=' + country + '&province=' \n\t// \t\t\t+ province + '&cases=' + '{11/20/20:5}' + '&deaths=' \n\t// \t\t\t+ '{11/20/20:5}' + '&recovered=' + '{11/20/20:5}';\n\n\t// \tthis.apiService.postData(params);\n\n\t// \t// const body = {\n\t// \t// \tintId, country, province, cases, deaths, recovered\n\t// \t// }\n\t// \t// const headers = new Headers(\n\t// \t// \t{\n\t// \t// \t\t'Content-Type': 'application/json'\n\t// \t// \t});\n\n\t// \t// return this.apiService.postData(body, {headers: headers});\n\t// }\n\n}","<div class=\"section-container\">\n    <h4>\n      COVID19 Cases, Deaths, Recovered - daily\n    </h4>\n\n    <table class=\"table table-inverse table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <!-- <th>Country</th> -->\n          <th>Date</th>\n          <th>Cases</th>\n          <th>Deaths</th>\n          <th>Recovered</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let s of stats\">\n\n          <!-- <td>{{ s }}</td> -->\n          <td>{{ s.date }}</td>\n          <td>{{ s.confirmed }}</td>\n          <td>{{ s.deaths }}</td>\n          <td>{{ s.recovered }}</td>\n        </tr>\n                 \n      </tbody>\n    </table>\n  \n    <!-- <app-pagination\n    (goPage)=\"goToPage($event)\"\n    (goPrev)=\"goToPrevious()\"\n    (goNext)=\"goToNext()\"\n    [page]=\"page\"\n    [perPage]=\"limit\"\n    [count]=\"total\">\n    </app-pagination> -->\n\n  </div>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \n\nexport class ApiService {\n\n\t//default ?sort=cases\n\tprivate SERVER_URL = \"https://corona.lmao.ninja/v2/all\";\n\n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\n\t\tconsole.log(\"coronaGlobalService:fetchData\");  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n\t}  \n}","import { Component, OnInit } from '@angular/core';  \nimport { ApiService } from '../corona-global-api.service';\n\n@Component({  \n\tselector: 'app-corona-global',  \n\ttemplateUrl: './corona-global.component.html',  \n\tstyleUrls: ['./corona-global.component.css']  \n})  \nexport class CoronaGlobalComponent implements OnInit {\n\t\n\tstats = [];\n\tdeathRate;\n\t\n\tconstructor(private apiService: ApiService) { }\n\t\n\tngOnInit() {\n\t\tthis.apiService.fetchData().subscribe((data: any[])=>{  \n\t\t\tconsole.log(data);  \n\t\t\tthis.stats = data; \n\t\t\t\n\t\t\t// let deathRate = this.stats['deaths'] / this.stats['cases'];\n\t\t\t// let deathRate = 1;\n\t\t})  \n\t}\n}","<div class=\"section-container\">\n    <span>Global Statistics</span>\n    <h5>{{ stats['affectedCountries'] }} Countries/Other</h5>\n</div>\n\n<div><br></div>\n\n<div class=\"container-fluid\">\n    <div class=\"row\" id=\"mainContent\">\n\n        <!-- <h2>Cases</h2> -->\n        <div class=\"card col-sm-6 card bg-basic text-black\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1><b>Cases</b></h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em><b>{{ stats['cases'] | number }}</b></em>\n            </div>\n\n            <div class=\"card-footer\" style=\"text-align: center;\">\n                <em><b>Today: {{ stats['todayCases'] | number }}</b></em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1><b>Deaths</b></h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em><b>{{ stats['deaths'] | number }} </b></em>\n            </div>\n\n            <div class=\"card-footer\" style=\"text-align: center;\">\n                <em><b>Today: {{ stats['todayDeaths'] | number }}</b></em>\n            </div>\n        </div>\n\n    </div>\n\n    <br>\n\n    <div class=\"row\" id=\"mainContent\">\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Recovered</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['recovered'] | number }} </em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Active</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['active'] | number }} </em>\n            </div>\n        </div>\n\n    </div>\n\n        <!-- <div class=\"card col-sm-3 col-md-2 d-none d-sm-block\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Death Rate</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ deathRate }} </em>\n            </div>\n        </div> -->\n\n    <br>\n\n    <!-- <div class=\"row\" id=\"mainContent\">\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Today's Cases</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['todayCases'] | number }} </em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-6\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Today's Deaths</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['todayDeaths'] | number }} </em>\n            </div>\n        </div>\n            \n    </div> -->\n\n    <br>\n    <div class=\"row\" id=\"mainContent\">\n\n        <!-- <h2>Cases</h2> -->\n        <div class=\"card col-sm-3\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Cases/Million</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['casesPerOneMillion'] | number }} </em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-3\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Deaths/Million</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['deathsPerOneMillion'] | number }} </em>\n            </div>\n        </div>\n            \n        <div class=\"card col-sm-3\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Total Tests</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['tests'] | number }} </em>\n            </div>\n        </div>\n\n        <div class=\"card col-sm-3\">\n            <div class=\"card-header\" style=\"text-align: center;\">\n                <h1>Tests/Million</h1>\n            </div>\n\n            <div class=\"card-body\" style=\"text-align: center;\">\n                <em>{{ stats['testsPerOneMillion'] | number }} </em>\n            </div>\n        </div>\n\n    </div>\n\n</div>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \nexport class ApiService {\n\n\tprivate SERVER_URL = 'https://newsapi.org/v2/top-headlines?' +\n\t  'q=corona&country=ca&apiKey=de67b2237afe4fb1b77bfbe773987fca';\n\t  \n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\n\t\tconsole.log(\"coronaNewsService:fetchData\");  \n\t\t\n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n\t}  \n}","import { Component, OnInit } from '@angular/core';  \nimport { ApiService } from '../corona-news-api.service';\n\n@Component({  \n\tselector: 'app-corona-news',  \n\ttemplateUrl: './corona-news.component.html',  \n\tstyleUrls: ['./corona-news.component.css']  \n})  \nexport class CoronaNewsComponent implements OnInit {\n\t\n\tstats = [];\n\t\n\tconstructor(private apiService: ApiService) { }\n\t\n\tngOnInit() {\n\t\tthis.apiService.fetchData().subscribe((data: any[])=>{  \n\t\t\tthis.stats = data['articles']; \n\t\t\tconsole.log('Returned ', this.stats);  \n\t\t})  \n\t}\n}","<div class=\"section-container\">\n    <h2><em>\n      Top Headlines\n    </em></h2>\n\n    <table class=\"table table-inverse table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th></th>\n          <th></th>\n          <!-- <th></th> -->\n          <!-- <th></th>       -->\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let s of stats\">\n\n          <td width=\"100px\">\n              <img src=\"{{ s.urlToImage }}\" width=\"140px\" height=\"100px\"> \n          </td>\n          <td width=\"900px\">\n            <h2><b>\n              <a href=\"{{ s.url }}\" target='_blank'>{{ s.title }}</a>\n            </b></h2>\n            <p><em>{{ s.description }}</em></p>\n          </td>\n          <!-- <td><em>{{ s.description }}</em></td> -->\n          <!-- <td>{{ s.source.name }}</td> -->\n          <!-- <td><a href=\"{{ s.url }}\" target='_blank'>Read story</a></td> -->        \n        </tr>\n                 \n      </tbody>\n    </table>\n  \n    <!-- <app-pagination\n    (goPage)=\"goToPage($event)\"\n    (goPrev)=\"goToPrevious()\"\n    (goNext)=\"goToNext()\"\n    [page]=\"page\"\n    [perPage]=\"limit\"\n    [count]=\"total\">\n    </app-pagination> -->\n\n  </div>","import { Injectable } from '@angular/core';  \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({  \n\tprovidedIn: 'root'  \n})  \n\nexport class ApiService {\n\n\t//default ?sort=cases\n\tprivate SERVER_URL = \"https://corona.lmao.ninja/v2/countries?sort=cases\";\n\n\tconstructor(private httpClient: HttpClient) { }\n\n\tpublic fetchData(){\n\n\t\tconsole.log(\"coronaTotalsService:fetchData\");  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n\t}  \n}","import { Component, OnInit } from '@angular/core';  \nimport { ApiService } from '../corona-totals-api.service';\n\n@Component({  \n\tselector: 'app-corona-totals',  \n\ttemplateUrl: './corona-totals.component.html',  \n\tstyleUrls: ['./corona-totals.component.css']  \n})  \nexport class CoronaTotalsComponent implements OnInit {\n\t\n\tstats = [];\n\t// cases: any;\n\t\n\tconstructor(private apiService: ApiService) { }\n\t\n\tngOnInit() {\n\t\tthis.apiService.fetchData().subscribe((data: any[])=>{  \n\t\t\t// console.log(data);  \n\t\t\tthis.stats = data;  \n\t\t}) \n\t\t\n\t}\n}","<div class=\"section-container\">\n    <h2>\n      Coronavirus - Stats by Country\n    </h2>\n\n    <table class=\"table table-inverse \n      table-hover header-fixed\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th>Country</th>\n          <th>Cases</th>\n          <th>Today's Cases</th>\n          <th>Deaths</th>\n          <th>Today's Deaths</th>\n          <th>Recovered</th>\n          <th>Active</th>\n          <th>Critical</th>\n          <th>Cases/M</th>\n          <th>Deaths/M</th>\n          <th>Total Tests</th>\n          <th>Tests/M</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let s of stats\">\n\n          <td><img src=\"{{ s.countryInfo.flag }}\" width=\"15%\" height=\"15%\"> &nbsp;             \n            <a routerLink=\"/google-chart/line-chart/{{ s.country }}\">\n              {{ s.country }}\n            </a>\n          </td>\n          <td>{{ s.cases }}</td>\n          <td>{{ s.todayCases }}</td>\n          <td>{{ s.deaths }}</td>\n          <td>{{ s.todayDeaths }}</td>\n          <td>{{ s.recovered }}</td>\n          <td>{{ s.active }}</td>\n          <td>{{ s.critical }}</td>\n          <td>{{ s.casesPerOneMillion }}</td>\n          <td>{{ s.deathsPerOneMillion }}</td>\n          <td>{{ s.tests }}</td>\n          <td>{{ s.testsPerOneMillion }}</td>\n         \n        </tr>\n                 \n      </tbody>\n    </table>\n  \n    <!-- <app-pagination\n    (goPage)=\"goToPage($event)\"\n    (goPrev)=\"goToPrevious()\"\n    (goNext)=\"goToNext()\"\n    [page]=\"page\"\n    [perPage]=\"limit\"\n    [count]=\"total\">\n    </app-pagination> -->\n\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n}","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n  <a *ngFor=\"let hero of heroes\" class=\"col-1-4\"\n      routerLink=\"/detail/{{hero.id}}\">\n    <div class=\"module hero\">\n      <h4>{{hero.name}}</h4>\n    </div>\n  </a>\n</div>\n\n<app-hero-search></app-hero-search>","import { Component, OnInit, Input } from '@angular/core';\nimport { GoogleMapService } from '../service/google-map.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChartData } from '../../chart-data'\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-area-chart',\n  templateUrl: './area-chart.component.html',\n  styleUrls: ['./area-chart.component.css']\n})\n\nexport class AreaChartComponent implements OnInit \n{\n  private gLib: any;\n  private stats = [];\n  private chartRows = [];\n  private chartRow = [];\n\n  // gChartService contains google charts lib ++ fetchData\n  constructor( \n                private gChartService : GoogleMapService,\n                private route: ActivatedRoute,\n                private location: Location )   \n  { \n\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", {\"packages\": [\"corechart\"]});\n    // this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n    this.gLib.charts.setOnLoadCallback(this.drawMain.bind(this));\n  }\n\n  private drawMain()\n  {\n    let data = new this.gLib.visualization.arrayToDataTable(this.chartRows);  \n    console.log('drawMain', data);\n    var options = {\n      title: '',\n      hAxis: {title: 'Cases/Million'}, \n      vAxis: {title: 'Deaths/Million'},\n      bubble: {textStyle: {fontSize: 10}}      \n    };\n\n    let chart = new this.gLib.visualization.BubbleChart(document.getElementById('divBubbleChart'));\n    chart.draw(data, options);\n  }\n\n  ngOnInit(): void \n  {\n\n    this.gChartService.fetchData().subscribe((data: any[])=>{ \n      this.stats = data;\n      // console.log(this.stats);\n      // push in the labels:\n      this.chartRow.push('Country', 'Cases', 'Deaths', 'Tests');\n      this.chartRows.push(this.chartRow);\n\n      let counter = 1;\n      let limit = 11;\n      // now push in the data:\n      for(let s of this.stats)\n      {\n        if(counter < limit){\n          let chartRow = [];\n          chartRow.push(s.country, s.casesPerOneMillion, s.deathsPerOneMillion, s.testsPerOneMillion);\n          this.chartRows.push(chartRow);\n          counter = counter + 1;\n        }\n      }    \n      console.log('chart', this.chartRows);\n      this.drawMain(); \n    })       \n  }\n  \n  goBack(): void {\n    this.location.back();\n  }\n\n}","<div align='left'>\n    <div>\n        <h4><em><b>Comparison: Top 10 Countries (total number of cases) - Cases, Deaths, Testing (per Million)</b></em></h4>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\" id=\"\">\n            <div id=\"divBubbleChart\" class=\"col-sm-10\"></div>\n        </div>\n    </div>\n\n    <p></p>\n    <p></p>\n\n    <div>\n        <button class=\"btn btn-link\" (click)=\"goBack()\">\n            Back To Charts\n        </button>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServiceModule } from './service/service.module';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { MapComponent } from './map/map.component';\nimport { AreaChartComponent } from './area-chart/area-chart.component';\n\n@NgModule({\n  declarations: [LineChartComponent, MapComponent, AreaChartComponent],\n  imports: [\n    CommonModule,\n    ServiceModule\n  ],\n  exports: [LineChartComponent],\n  providers : []\n})\nexport class GoogleChartModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { GoogleChartService } from '../service/google-chart.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChartData } from '../../chart-data'\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\n\nexport class LineChartComponent implements OnInit \n{\n  // @Input() chartData: ChartData;\n\n  private gLib: any;\n  private res = [];\n  public country: string;\n  private stats = [];\n  // private chart = [];\n  // private chartCols = [];\n  private chartRows = [];\n  private chartRow = [];\n  public chartData: ChartData;\n\n  // gChartService contains google charts lib ++ fetchData\n  constructor( \n                private gChartService : GoogleChartService,\n                private route: ActivatedRoute,\n                private location: Location )   \n  { \n\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages':['corechart','table']});\n    // this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n    this.gLib.charts.setOnLoadCallback(this.drawMain.bind(this));\n  }\n\n  private drawChart()\n  {\n    let data = this.gLib.visualization.arrayToDataTable(this.res);\n    console.log('drawChart', data);\n    var options = {\n      title:'Daily Cases | Deaths | Recovered',\n      legend:{position:'top-right'},\n      chartArea:{width:'100%', height:'100%'},\n      curveType: 'function',\n     };\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('divLineChart'));\n    chart.draw(data, options);\n  }\n\n  private drawMain()\n  {\n    let data = new this.gLib.visualization.arrayToDataTable(this.chartRows);  \n    console.log('drawMain', data);\n    var options = {\n      title:'Daily Cases | Deaths | Recovered',\n      //legend:{position:'bottom'},\n      chartArea:{width: '50%', height:'50%'},\n      curveType: 'function',\n      vAxis: {\n        scaleType: 'linear', //log or linear (default)\n        viewWindowMode: 'explicit',\n        viewWindow: {\n          //max: 8000,\n          min: 0,\n        },\n        gridlines: {\n          count: 5,  //set kind of step (max-min)/count\n        }\n      }\n     };\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('divLineChart'));\n    chart.draw(data, options);\n  }\n\n  ngOnInit(): void \n  {\n    //sample data: note that 1st line holds labels (column headers)\n    // this.res = \n    // [\n    //   ['Date', 'Cases', 'Deaths', 'Recovered'],\n    //   ['2020-1-01',  1000,      400,   200],\n    //   ['2020-1-02',  1170,      460,   400],\n    //   ['2020-1-03',  660,       1120, 102],\n    //   ['2020-1-04',  1030,      540,   222]\n    // ];\n    // console.log('res', this.res);\n\n    this.route.paramMap.subscribe(params => {\n    \tthis.country = params.get(\"country\")  })\n    // this.country = 'US';   \n    // console.log('Param ', this.country);\n\n    // TO DO: FIX HACK\n    // Country names do not always resolve: e.g \"USA\" from list = \"US\" in chart, \"UK\" = \"United Kingdom\"\n    if (this.country == 'USA'){\n      this.country = 'US';\n    }\n    if (this.country == 'UK'){\n      this.country = 'United Kingdom';\n    }\n\n    this.gChartService.fetchData().subscribe((data: any[])=>{ \t\t\t\n      //This seems a bit of a hack, but couldn't figure out another workable method...\n      //loop through all (c) country names, and when we get a match, set the stats obj to the data[c]\n      let keys = Object.keys(data);\n      for (var i=0; i < keys.length; i++) \n      {\n        if(this.country == keys[i])\n        {\n          this.stats = data[keys[i]];\n        };\n      }   \n      this.chartRow.push('Date', 'Confirmed', 'Recovered', 'Deaths');\n      this.chartRows.push(this.chartRow);\n      for(let s of this.stats)\n      {\n        let chartRow = [];\n        chartRow.push(s.date, s.confirmed, s.recovered, s.deaths);\n        this.chartRows.push(chartRow);\n      }    \n      console.log('chart', this.chartRows);\n      this.drawMain(); \n    })       \n  }\n  \n  goBack(): void {\n    this.location.back();\n  }\n\n}","<div align='left'>\n    <div>\n        <h1><em><b>{{ country }}</b></em></h1>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\" id=\"\">\n            <div id=\"divLineChart\" class=\"col-sm-10\"></div>\n        </div>\n    </div>\n\n    <p></p>\n    <p></p>\n\n    <div>\n        <button class=\"btn btn-link\" (click)=\"goBack()\">\n            Back To Countries\n        </button>\n    </div>\n</div>\n","// NOTE: Must obtain API key to use this:\n// https://developers.google.com/maps/documentation/javascript/get-api-key\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { GoogleMapService } from '../service/google-map.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChartData } from '../../chart-data'\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\n\nexport class MapComponent implements OnInit \n{\n  private gLib: any;\n  // private res = [];\n  // public country: string;\n  private stats = [];\n  // private chart = [];\n  // private chartCols = [];\n  private chartRows = [];\n  private chartRow = [];\n  // public chartData: ChartData;\n\n  // gChartService contains google charts lib ++ fetchData\n  constructor( \n                private gChartService : GoogleMapService,\n                private route: ActivatedRoute,\n                private location: Location )   \n  { \n\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load(\"current\", {\"packages\": [\"map\"]});\n    // this.gLib.charts.setOnLoadCallback(this.drawChart.bind(this));\n    this.gLib.charts.setOnLoadCallback(this.drawMain.bind(this));\n  }\n\n  // private drawChart()\n  // {\n  //   let data = this.gLib.visualization.arrayToDataTable(this.res);\n  //   console.log('drawChart', data);\n  //   var options = {\n  //     title:'Daily Cases | Deaths | Recovered',\n  //     legend:{position:'top-right'},\n  //     chartArea:{width:'100%', height:'100%'},\n  //     curveType: 'function',\n  //    };\n  //   let chart = new this.gLib.visualization.LineChart(document.getElementById('divLineChart'));\n  //   chart.draw(data, options);\n  // }\n\n  private drawMain()\n  {\n    let data = new this.gLib.visualization.arrayToDataTable(this.chartRows);  \n    console.log('drawMain', data);\n    var options = {\n      showToolTip: true,\n      showInfoWindow: true\n     };\n    let chart = new this.gLib.visualization.Map(document.getElementById('divMapChart'));\n    chart.draw(data, options);\n  }\n\n  ngOnInit(): void \n  {\n\n    // this.route.paramMap.subscribe(params => {\n    // \tthis.country = params.get(\"country\")  })\n    // this.country = 'US';   \n    // console.log('Param ', this.country);\n\n    // TO DO: FIX HACK\n    // Country names do not always resolve: e.g \"USA\" from list = \"US\" in chart, \"UK\" = \"United Kingdom\"\n    // if (this.country == 'USA'){\n    //   this.country = 'US';\n    // }\n    // if (this.country == 'UK'){\n    //   this.country = 'United Kingdom';\n    // }\n\n    this.gChartService.fetchData().subscribe((data: any[])=>{ \n      this.stats = data;\n\n      //This seems a bit of a hack, but couldn't figure out another workable method...\n      //loop through all (c) country names, and when we get a match, set the stats obj to the data[c]\n      // let keys = Object.keys(data);\n      // for (var i=0; i < keys.length; i++) \n      // {\n      //   if(this.country == keys[i])\n      //   {\n      //     this.stats = data[keys[i]];\n      //   };\n      // } \n      \n      // push in the labels:\n      this.chartRow.push('Country', 'Stats');\n      this.chartRows.push(this.chartRow);\n\n      // now push in the data:\n      for(let s of this.stats)\n      {\n        let chartRow = [];\n        chartRow.push(s.country, s.cases);\n        this.chartRows.push(chartRow);\n      }    \n      console.log('chart', this.chartRows);\n      this.drawMain(); \n    })       \n  }\n  \n  goBack(): void {\n    this.location.back();\n  }\n\n}","<div align='left'>\n    <div>\n        <h1><em><b>Top 10 Countries - Confirmed Cases</b></em></h1>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\" id=\"\">\n            <div id=\"divMapChart\" class=\"col-sm-10\"></div>\n        </div>\n    </div>\n\n    <p></p>\n    <p></p>\n\n    <div>\n        <button class=\"btn btn-link\" (click)=\"goBack()\">\n            Back To Maps\n        </button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ServiceModule } from './service.module';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var google: any;\n\n@Injectable({\n  providedIn: ServiceModule\n})\nexport class GoogleChartService {\n\n  private google : any;\n\n  //note: https://corona.lmao.ninja/countries?all is NOT the API link we want here,...\n  // this line chart will detail country/region cases, deaths, etc ... this will be from different api call\n\n  // private SERVER_URL = \"https://corona.lmao.ninja/countries?all\";\n\n  private SERVER_URL = \"https://pomber.github.io/covid19/timeseries.json\"\n\n  constructor(private httpClient: HttpClient) { \n    this.google = google;\n  }\n\n  getGoogle(){\n    return this.google;\n  }\n\n  public fetchData(){\n\t\t\n\t\tconsole.log(\"GoogleChartService:fetchData\");  \n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \n  }  \n  \n}","import { Injectable } from '@angular/core';\r\nimport { ServiceModule } from './service.module';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ndeclare var google: any;\r\n\r\n@Injectable({\r\n  providedIn: ServiceModule\r\n})\r\n\r\nexport class GoogleMapService {\r\n\r\n  private google : any;\r\n\r\n  private SERVER_URL = \"https://corona.lmao.ninja/v2/countries?sort=cases\"\r\n\r\n  constructor(private httpClient: HttpClient) { \r\n    this.google = google;\r\n  }\r\n\r\n  getGoogle(){\r\n    return this.google;\r\n  }\r\n\r\n  public fetchData(){\r\n\t\t\r\n\t\tconsole.log(\"GoogleMapService:fetchData\");  \r\n\t\treturn this.httpClient.get(`${this.SERVER_URL}`);  \r\n  }  \r\n  \r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ServiceModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Hero }         from '../hero';\nimport { HeroService }  from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: [ './hero-detail.component.css' ]\n})\nexport class HeroDetailComponent implements OnInit {\n  @Input() hero: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.heroService.getHero(id)\n      .subscribe(hero => this.hero = hero);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n save(): void {\n    this.heroService.updateHero(this.hero)\n      .subscribe(() => this.goBack());\n  }\n}","<div *ngIf=\"hero\">\n  <h2>{{hero.name | uppercase}} Details</h2>\n  <div><span>id: </span>{{hero.id}}</div>\n  <div>\n    <label>name:\n      <input [(ngModel)]=\"hero.name\" placeholder=\"name\"/>\n    </label>\n  </div>\n  <button (click)=\"goBack()\">go back</button>\n  <button (click)=\"save()\">save</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.css' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n}","<div id=\"search-component\">\n    <h4><label for=\"search-box\">Hero Search</label></h4>\n  \n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n  \n    <ul class=\"search-result\">\n      <li *ngFor=\"let hero of heroes$ | async\" >\n        <a routerLink=\"/detail/{{hero.id}}\">\n          {{hero.name}}\n        </a>\n      </li>\n    </ul>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Hero } from './hero';\nimport { MessageService } from './message.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class HeroService {\n\n  private heroesUrl = 'api/heroes';  // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** GET heroes from the server */\n  getHeroes (): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(\n        tap(_ => this.log('fetched heroes')),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getHeroNo404<Data>(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/?id=${id}`;\n    return this.http.get<Hero[]>(url)\n      .pipe(\n        map(heroes => heroes[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} hero id=${id}`);\n        }),\n        catchError(this.handleError<Hero>(`getHero id=${id}`))\n      );\n  }\n\n  /** GET hero by id. Will 404 if id not found */\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x => x.length ?\n         this.log(`found heroes matching \"${term}\"`) :\n         this.log(`no heroes matching \"${term}\"`)),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new hero to the server */\n  addHero (hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero (hero: Hero | number): Observable<Hero> {\n    const id = typeof hero === 'number' ? hero : hero.id;\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero (hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n  heroes: Hero[];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n    .subscribe(heroes => this.heroes = heroes);\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) { return; }\n    this.heroService.addHero({ name } as Hero)\n      .subscribe(hero => {\n        this.heroes.push(hero);\n      });\n  }\n\n  delete(hero: Hero): void {\n    this.heroes = this.heroes.filter(h => h !== hero);\n    this.heroService.deleteHero(hero).subscribe();\n  }\n\n}","<h2>My Heroes</h2>\n\n<div>\n  <label>Hero name:\n    <input #heroName />\n  </label>\n  <!-- (click) passes input value to add() and then clears the input -->\n  <button (click)=\"add(heroName.value); heroName.value=''\">\n    add\n  </button>\n</div>\n\n<ul class=\"heroes\">\n  <li *ngFor=\"let hero of heroes\">\n    <a routerLink=\"/detail/{{hero.id}}\">\n      <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n    </a>\n    <button class=\"delete\" title=\"delete hero\"\n      (click)=\"delete(hero)\">x</button>\n  </li>\n</ul>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}","<div *ngIf=\"messageService.messages.length\">\n\n    <h2>Messages</h2>\n    <button class=\"clear\"\n            (click)=\"messageService.clear()\">clear</button>\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a class=\"navbar-brand\" href=\"#\">\n    <span class=\"logo logo-left\">Coronavirus</span>\n    <span class=\"logo logo-right\">Update</span>\n    <span class=\"logo-text\">Live</span>\n</a>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sidebar\">\n    <h4></h4>\n    \n    <div class=\"sidebar-link\">\n      <a routerLink=\"/corona-news\">News</a>\n    </div>\n\n    <div><hr /></div>\n\n    <div class=\"sidebar-link\">\n      <a routerLink=\"/corona-global\">Global</a>\n    </div>\n\n    <div><hr /></div>\n\n    <div class=\"sidebar-link\">\n        <a routerLink=\"/corona-totals\">Countries</a>\n    </div>\n\n    <div><hr /></div>\n    \n    <div class=\"sidebar-link\">\n      <a routerLink=\"/google-chart/area-chart\">Charts</a>\n    </div>\n    \n    <!-- <div><hr /></div>\n\n    <div class=\"sidebar-link\">\n      <a routerLink=\"/google-chart/map\">Maps</a>\n    </div> -->\n\n    <!-- <div class=\"sidebar-link\">\n      <a routerLink=\"/google-chart/line-chart\">Charts</a>\n    </div> -->\n\n\n    <!-- Not implemented yet ... -->\n    <!-- <div><hr /></div>\n    <div class=\"sidebar-link\">\n      <a routerLink=\"/corona-day\">By Day</a>\n    </div>\n\n    <div class=\"sidebar-link\">\n        <a routerLink=\"/books\">Books</a>\n    </div> -->\n\n</div>\n\n<!-- <div class=\"sidenav\">\n    <a href=\"#about\">About</a>\n    <a href=\"#services\">Services</a>\n    <a href=\"#clients\">Clients</a>\n    <a href=\"#contact\">Contact</a>\n    <button class=\"dropdown-btn\">Dropdown \n      <i class=\"fa fa-caret-down\"></i>\n    </button>\n    <div class=\"dropdown-container\">\n      <a href=\"#\">Link 1</a>\n      <a href=\"#\">Link 2</a>\n      <a href=\"#\">Link 3</a>\n    </div>\n    <a href=\"#contact\">Search</a>\n  </div> -->\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}